{"version":3,"sources":["util/apiConfig.js","game/gameContainer.js","game/modal.js","game/gameView.js","game/feedback_images sync /^/.//.*$","game/feedback_images/b1.png","game/feedback_images/b2.png","game/feedback_images/b3.png","game/feedback_images/b4.png","game/feedback_images/b5.png","game/feedback_images/b6.png","game/feedback_images/f1.png","game/feedback_images/f2.png","game/feedback_images/f3.png","game/feedback_images/f4.png","game/feedback_images/f5.png","game/feedback_images/fr1.png","game/feedback_images/fr2.png","game/feedback_images/fr3.png","game/feedback_images/fr4.png","game/feedback_images/fr5.png","game/feedback_images/s1.png","imgs/pantzRock.png","imgs sync /^/.//question.*/.png$","imgs/questionArtist.png","imgs/questionArtistM.png","imgs/questionTrack.png","imgs/questionTrackM.png","start/startView.js","start/startContainer.js","gameOver/gameOverView.js","gameOver/gameOverContainer.js","highScore/highScoreView.js","highScore/highScoreContainer.js","App.js","serviceWorker.js","reducers/index.js","index.js","util/dbConfig.js","actions/index.js"],"names":["client_id","client_secret","checkAnswer","trackChosen","trackOther","username","category","score","setScore","lives","setLives","setMessage","history","setModalShow","popularity","i","Math","floor","random","result","text","name","img","db","collection","add","Number","push","getApiDataArtist","artistId","setArtist","authOptions","url","headers","Buffer","toString","form","grant_type","json","request","require","post","error","response","body","console","log","statusCode","token","access_token","options","get","imgsrc","images","connect","state","dispatch","props","useHistory","React","useState","track1","setTrack1","track2","setTrack2","artist1","setArtist1","artist2","setArtist2","question","setQ","questionType","setQuestionType","message","countdown","setCountdown","time","setTime","modalShow","statsMessage","setStatsMessage","nextQuestion","useEffect","interval","setInterval","clearInterval","where","orderBy","then","querySnapshot","scores","forEach","doc","data","currentScore","length","lesserPoints","findIndex","num","round","calculatePercent","playlistid","tracks","items","track","j","id1","artists","id","id2","getApiPlaylist","opacity","ResultModal","Modal","size","aria-labelledby","centered","Body","Image","style","maxWidth","src","Footer","Button","onClick","onHide","Row","Col","className","alt","optionsArtist","optionsTrack","md","span","offset","xs","album","GameView","pantzLifesrc","xsOffset","lifeCols","key","document","getElementsByClassName","Container","fluid","marginTop","variant","ProgressBar","animated","striped","now","show","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","StartView","InputGroup","FormControl","placeholder","aria-label","aria-describedby","value","onChange","event","preventDefault","uName","target","setUsername","DropdownButton","as","Append","title","toUpperCase","genre","Dropdown","Item","onSelect","setCategory","test","OverlayTrigger","placement","delay","hide","overlay","Tooltip","cursor","pointerEvents","disabled","GameOverView","highscoreMessage","marginRight","setHighscoreMessage","limit","queryDocs","docs","tenthScore","confettiPiece","createElement","insertBefore","firstChild","getHighscoreMessage","generateList","Spinner","animation","Table","borded","index","HighScoreView","allScores","hitsScores","EDMScores","marginBottom","rockScores","hiphopScores","getAllScores","setAllScores","rows","getCategoryScores","setScoreList","HighScoreContainer","setHitsScores","setEDMScores","setRockScores","setHiphopScores","App","exact","path","Boolean","window","location","hostname","match","reducer","action","type","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","app","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId"],"mappings":"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","file":"static/js/main.dda64eb9.chunk.js","sourcesContent":["var client_id = '02c78a6b532f4efb8e5824c6cff48a57'; // Our client id from Spotify\nvar client_secret = '79ab1ea19083458cb62a68bf6bca4ce5'; // Our secret from Spotify\n//var redirect_uri = 'REDIRECT_URI'; // Your redirect uri, ex http://localhost:8888/callback if localhost is used\n\nexport {client_id, client_secret};","import React from 'react';\nimport GameView from './gameView.js';\nimport {client_id, client_secret} from '../util/apiConfig.js';\nimport {db} from '../util/dbConfig.js';\nimport {useHistory} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {setScore, setLives} from '../actions';\nimport PropTypes from 'prop-types';\n\nconst GameContainer = (props) => {\n    const history = useHistory();\n\n    /* GUESS TRACK VERSION */\n    const [track1, setTrack1] = React.useState();\n    const [track2, setTrack2] = React.useState();\n\n    /* GUESS ARTIST VERSION */\n    const [artist1, setArtist1] = React.useState({name:'', popularity:'', imgsrc:''});\n    const [artist2, setArtist2] = React.useState({name:'', popularity:'', imgsrc:''});\n\n    const [question, setQ] = React.useState(0);\n    const [questionType, setQuestionType] = React.useState('Track');\n\n    const [message, setMessage] = React.useState({ result:'r', text: '', img:'1'}); \n    // setMessage: result: r = right/ w = wrong/ t = time's up \n    // text: the text that's then displayed\n\n    const [countdown, setCountdown] = React.useState(5);\n    const [time, setTime] = React.useState(100);\n    const [modalShow, setModalShow] = React.useState(false);\n    const [statsMessage, setStatsMessage] = React.useState(\"\");\n\n    const nextQuestion = () => setQ(question + 1);\n    \n    // Start countdown and reset score and lives first time\n    React.useEffect(() => {\n        // If the user is reloading they should be directed to start page\n        if (props.username === \"\") history.push('/');\n\n        props.setScore(0);\n        props.setLives(3);\n        setCountdown(5);\n        var i = 5;\n        const interval = setInterval(() => {\n            setCountdown(countdown => countdown - 1)\n            --i;\n            if (i === 0) {\n                clearInterval(interval);\n                nextQuestion();\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    // For every new question:\n\n    // Start timebar, load new question and load new stats\n    React.useEffect(() => {\n        if (countdown < 1 && !modalShow) {\n            setTime(100);\n            var i = 100;\n            const interval = setInterval(() => {\n                setTime(time => time - 1);\n                --i;\n                // delay of setTime()\n                if (i === -5) {\n                    clearInterval(interval);\n                    checkAnswer(null, null, props.username, props.category, props.score, props.setScore, props.lives, props.setLives, setMessage, history, setModalShow);\n                }\n            }, 100);\n            if (question > 4) {\n                db.collection(\"highscore\").where(\"category\", \"==\", props.category).orderBy(\"score\").get()\n                    .then((querySnapshot) => {\n                        const scores = [];\n                        querySnapshot.forEach((doc) => {\n                            scores.push(doc.data().score);\n                        });\n                        setStatsMessage(calculatePercent(props.score, scores));\n                    });\n            }\n            getApiPlaylist(props.category, client_id, client_secret, setTrack1, setTrack2, setArtist1, setArtist2);\n            return () => clearInterval(interval);\n        }\n    }, [question, modalShow]);\n\n    // Randomize type of question\n    React.useEffect(() => { \n        if(Math.floor(Math.random()*2)<1){\n            setQuestionType(\"Track\");\n        }else{\n            setQuestionType(\"Artist\");\n        }\n    }, [question] );\n\n\n    // Lives\n    var opacity = [1, 1, 1];\n    if (props.lives === 2) opacity = [1, 1, 0.5];\n    else if (props.lives === 1) opacity = [1, 0.5, 0.5];\n\n\n    return <GameView\n        score={props.score}\n        opacity = {opacity}\n        track1={track1}\n        track2={track2}\n        artist1={artist1}\n        artist2={artist2}\n        checkAnswer={(trackChosen, trackOther) => {\n            checkAnswer(trackChosen, trackOther, props.username, props.category, props.score, props.setScore, props.lives, props.setLives, setMessage, history, setModalShow);\n     }}\n        message = {message}\n        countdown= {countdown}\n        time = {time}\n        modalShow={modalShow}\n        setModalShow={setModalShow}\n        nextQuestion={nextQuestion}\n        statsMessage={statsMessage}\n        category={props.category}\n        questionType={questionType}\n        />\n}\n\nGameContainer.propTypes = {\n    score: PropTypes.number.isRequired,\n    lives: PropTypes.number.isRequired,\n    category: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    setScore: PropTypes.func.isRequired,\n    setLives: PropTypes.func.isRequired\n};\n\n// The API-call\nfunction getApiPlaylist(category, client_id, client_secret, setTrack1, setTrack2, setArtist1, setArtist2){\n\n    // Application requests authorization\n    var authOptions = {\n        url: 'https://accounts.spotify.com/api/token',\n        headers: {\n            'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n        },\n        form: {\n            grant_type: 'client_credentials'\n        },\n        json: true\n    };\n    var request = require('request'); // \"Request\" library\n    \n    \n    var playlistid;\n    switch (category) {\n        case \"EDM\":\n            // EDM Hits 2020\n            playlistid = '6KU6tm70eecXvDNITltN3h';\n            break;\n        case \"Rock\":\n            // Rock Classics\n            playlistid = '37i9dQZF1DWXRqgorJj26U';\n            break;\n        case \"Hip-hop\":\n            // Get Turnt\n            playlistid = '37i9dQZF1DWY4xHQp97fN6';\n            break;\n        default:\n            playlistid = '4hvCIDjqQBWj8uz5jPntNf';\n    }\n\n\n    request.post(authOptions, function(error, response, body) {\n        // console.log(error);\n        // console.log(response.statusCode);\n        if (!error && response.statusCode === 200) {\n            // use the access token to access the Spotify Web API\n            var token = body.access_token;\n            var options = {\n                url: 'https://api.spotify.com/v1/playlists/' + playlistid,\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                },\n                json: true\n            };\n    \n            request.get(options, function(error, response, body) {\n                    var i = Math.floor(Math.random()*100);\n                    while (body.tracks.items[i].track === null) i = Math.floor(Math.random()*100);\n                    var j = Math.floor(Math.random()*100);\n                    while (j === i || body.tracks.items[j].track === null) j = Math.floor(Math.random()*100);\n                    setTrack1(body.tracks.items[i].track);\n                    setTrack2(body.tracks.items[j].track);\n                    var id1=body.tracks.items[i].track.artists[0].id\n                    var id2=body.tracks.items[j].track.artists[0].id\n                    getApiDataArtist(client_id, client_secret, id1, setArtist1)\n                    getApiDataArtist(client_id, client_secret, id2, setArtist2)\n            });\n            //return body\n        }\n    });\n}\n\nfunction checkAnswer(trackChosen, trackOther, username, category, score, setScore, lives, setLives, setMessage, history, setModalShow) {\n    // console.log(\"Track chosen: \" + trackChosen.name)\n    // console.log(\"Track other: \" + trackOther.name)\n    if (trackChosen !== null && trackChosen.popularity>trackOther.popularity) {\n        setScore(score + 1);\n        var i = Math.floor(Math.random() * 5) + 1;\n        setMessage({result:'r', text: <div><i>{trackChosen.name}</i> has popularity <b>{trackChosen.popularity}%</b> and <i>{trackOther.name}</i> <b>{trackOther.popularity}%</b></div>, img: i});\n        setModalShow(true)\n        return true;\n    } else {\n        if (trackChosen !== null){ \n            var i = Math.floor(Math.random() * 6) + 1;\n            setMessage({result: 'w', text: <div><i>{trackChosen.name}</i> has popularity <b>{trackChosen.popularity}%</b> and <i>{trackOther.name}</i> <b>{trackOther.popularity}%</b></div>, img: i});\n        }        \n        else setMessage({result: 't',text: <div>You didn't make it in time.</div>, img:'1'});\n\n        if (lives > 1) {\n            setLives(lives - 1);\n        } else {\n            db.collection(\"highscore\").add({\n                name: username,\n                category,\n                score: Number(score)\n            });\n            history.push('/gameover');\n        }\n        setModalShow(true);\n        return false;\n    }\n}\n\nfunction calculatePercent(currentScore, scores) {\n    var length = scores.length;\n    var lesserPoints = scores.findIndex((num) => currentScore <= num);\n    var percent = 100 - Math.round(lesserPoints/length * 100);\n    return \"Keep it up! Only \" + percent + \" % has got this far in this category!\";\n}\n\n// API call for Artist-object\nfunction getApiDataArtist(client_id, client_secret, artistId, setArtist){\n    // your application requests authorization\n    var authOptions = {\n    url: 'https://accounts.spotify.com/api/token',\n    headers: {\n        'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n    },\n    form: {\n        grant_type: 'client_credentials'\n    },\n    json: true\n    };\n    var request = require('request'); // \"Request\" library\n  \n    request.post(authOptions, function(error, response, body) {\n        console.log(error)\n        console.log(response.statusCode)\n    if (!error && response.statusCode === 200) {\n        // use the access token to access the Spotify Web API\n        var token = body.access_token;\n        var options = {\n          url: 'https://api.spotify.com/v1/artists/' + artistId,\n        headers: {\n            'Authorization': 'Bearer ' + token\n        },\n        json: true\n        };\n  \n        request.get(options, function(error, response, body) {\n            setArtist({name: body.name, popularity: body.popularity, imgsrc: body.images[0].url});\n        });\n        }\n    });\n}\n\n// Old function to get tracks\n/*\nfunction getApiData(id, client_id, client_secret, setTrack){\n    // your application requests authorization\n    var authOptions = {\n    url: 'https://accounts.spotify.com/api/token',\n    headers: {\n        'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n    },\n    form: {\n        grant_type: 'client_credentials'\n    },\n    json: true\n    };\n    var request = require('request'); // \"Request\" library\n  \n    request.post(authOptions, function(error, response, body) {\n        console.log(error)\n        console.log(response.statusCode)\n    if (!error && response.statusCode === 200) {\n        // use the access token to access the Spotify Web API\n        var token = body.access_token;\n        var options = {\n          url: 'https://api.spotify.com/v1/tracks/' + id,\n        //url: 'https://api.spotify.com/v1/tracks/2TpxZ7JUBn3uw46aR7qd6V',\n        headers: {\n            'Authorization': 'Bearer ' + token\n        },\n        json: true\n        };\n  \n        request.get(options, function(error, response, body) {\n\n            setTrack(body)\n            //setTrack(body);\n  \n  \n        });\n        //return body\n        }\n    });\n}\n*/\n\nconst mapStateToProps = state => ({\n    score: state.score,\n    lives: state.lives,\n    category: state.category,\n    username: state.username\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setScore: score => dispatch(setScore(score)),\n    setLives: lives => dispatch(setLives(lives))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContainer);\n","import React from 'react';\nimport {Modal, Button, Image} from 'react-bootstrap';\n\nfunction ResultModal(props) {\n  var imgsrc;\n  if(props.message.result==='r'){\n    if(props.category==='Rock'){\n      imgsrc = 'fr' + props.message.img +'.png';\n    }else{imgsrc = 'f' + props.message.img +'.png';}\n  }else if(props.message.result==='w'){\n    imgsrc = 'b' + props.message.img +'.png';\n  }else if(props.message.result==='t'){ \n    imgsrc = 's1.png';\n  }\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n\n        <Modal.Body id={\"modal\"+props.category}>\n        <Image id={\"title\"+props.message.result} style={{maxWidth: '100%'}} src={require('./feedback_images/' + imgsrc)}></Image>\n          {props.message.text}\n        </Modal.Body>\n        <Modal.Footer id={ props.category + props.message.result\n          // (props.message.result==='r'&&props.category!=='Rock')? 'r':(props.message.result==='r'&&props.category==='Rock')?'ro':'w'\n          }>\n        <Button \n        onClick={() => (\n            props.nextQuestion(),\n            props.onHide()\n        )}>\n        NEXT QUESTION\n      </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\nexport default ResultModal;","import React from 'react';\nimport {Container, Row, Col, Image, ProgressBar, Button} from 'react-bootstrap';\nimport ResultModal from './modal.js';\nimport {useHistory} from 'react-router-dom';\n\nconst GameView = (props) => {\n  const history = useHistory();\n  var pantzLifesrc;\n\n  // Change pantZlife img depending on category\n  if(props.category === 'Rock'){\n    pantzLifesrc = require(\"../imgs/pantzRock.png\");\n  }else{pantzLifesrc=\"https://i.imgur.com/Zrdtb9n.png\"\n  }\n\n  // Lives\n  var xsOffset = [6, 0, 0];\n  var lifeCols = [];\n  for (let i = 0; i < 3; i++) {\n    lifeCols.push(\n      <Col key={i} md={{span:1, offset:0}} xs={{span:2, offset:xsOffset[i]}}>\n        <Image id=\"pantzLife\" style={{opacity: props.opacity[i]}} src={pantzLifesrc}></Image>\n      </Col>\n    );\n  }\n\n  // Change cursor depending on category\n  if(document.getElementsByClassName(\"body\")[0].id !== props.category + 'Body'){\n    document.getElementsByClassName(\"body\")[0].id = props.category + 'Body'\n    }\n\n\n  \n\n  return (\n    \n    <Container className='gameView' id={props.category} fluid>\n      {/* TOP-BAR. Includes: PantZ life*/}\n      <Row id={\"topBar\"+props.category}>\n        <Col style={{marginTop: \"4%\"}} md={{span:2, offset:0}}>\n          <Button variant=\"outline-danger\" onClick={() => history.push('/')}>\n            LEAVE GAME\n          </Button>\n        </Col>\n        <Col style={{marginTop: \"4%\"}} md={{span:2, offset:0}}>\n          <h2>Score: {props.score}</h2>\n        </Col>\n        <Col style={{marginTop: \"4%\"}} md={{span:1, offset:4}}>\n          <h2>Lives: </h2>\n        </Col>\n        {lifeCols}\n      </Row>\n\n      <Row><Col>{props.statsMessage}</Col></Row>\n          {options(props)}\n\n      \n      <Row style={{marginTop: \"2%\"}}>\n        <Col md={{span: 8, offset: 2}}>\n          <ProgressBar animated striped variant=\"danger\" now={(props.countdown > 0 ? 100 : props.time)}/>\n        </Col>\n      </Row>\n      <Row> {/* MESSAGE RÄTT/FEL */}\n        <Col>\n          <ResultModal\n            show={props.modalShow}\n            onHide={() => props.setModalShow(false)}\n            message={props.message}\n            setQ={props.setQ}\n            nextQuestion={props.nextQuestion}\n            category={props.category}/>\n        </Col>\n      </Row>\n    </Container>);\n}\n\nconst options = (props) => {\n  if (props.countdown > 0) {\n    return (<div>\n      <Row> {/* COUNT DOWN */}\n        <Col>\n          <h2>Get ready</h2>\n          <h1 className=\"h0\" >{props.countdown}</h1>\n        </Col>\n      </Row>\n    </div>);\n  } else {\n    return (<div>\n      <Row> {/* GAME HEADING */}\n        <Col>\n        <Image className=\"gameQuestion\" id={\"gameQuestion\"+props.category} src={require('../imgs/' + \"question\" + props.questionType + \".png\")} alt=\"\" />\n        </Col>\n      </Row>\n      <Row id=\"gamePlay\">  {/* GAME PLAY */}\n        <Col>\n          {props.questionType==\"Artist\"?optionsArtist(props):optionsTrack(props)}\n        </Col>\n      </Row>\n    </div>);\n  }\n}\n\nconst optionsArtist = (props) => {\n  return (<div>\n    <Row>\n        <Col md={{span:3, offset:2}} xs={{span:6, offset:0}}>\n        <h4>{props.artist1?props.artist1.name:null}</h4>\n        </Col>\n        <Col md={{span:3, offset:2}} xs={{span:6, offset:0}}>\n        <h4>{props.artist2?props.artist2.name:null}</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={{span:3, offset:2}} xs={{span:6, offset:0}}>\n          <Image src={props.artist1?props.artist1.imgsrc:null}  onClick={() => props.checkAnswer(props.artist1, props.artist2)} alt=\"\" />\n        </Col>\n        <Col md={{span:3, offset:2}} xs={{span:6, offset:0}}>\n          <Image src={props.artist1?props.artist2.imgsrc:null} onClick={() => props.checkAnswer(props.artist2, props.artist1)} alt=\"\" />\n        </Col>\n      </Row>\n  </div>)\n}\n\nconst optionsTrack = (props) => {\n  return (<div>\n    <Row>\n    <Col md={{span:3, offset:2}} xs={{span:6, offset:0}}>\n    <h4>{props.track1?props.track1.name:null}</h4>\n    </Col>\n    <Col md={{span:3, offset:2}} xs={{span:6, offset:0}}>\n    <h4>{props.track2?props.track2.name:null}</h4>\n    </Col>\n  </Row>\n  <Row>\n    <Col md={{span:3, offset:2}} xs={{span:6, offset:0}}>\n      <Image src={props.track1?props.track1.album.images[\"0\"].url:null}  onClick={() => props.checkAnswer(props.track1, props.track2)} alt=\"\" />\n      <Row><Col>By {props.track1?props.track1.artists[0].name:null}</Col></Row>\n    </Col>\n    <Col md={{span:3, offset:2}} xs={{span:6, offset:0}}>\n      <Image src={props.track2?props.track2.album.images[\"0\"].url:null} onClick={() => props.checkAnswer(props.track2, props.track1)} alt=\"\" />\n      <Row><Col>By {props.track2?props.track2.artists[0].name:null}</Col></Row>\n    </Col>\n  </Row></div>)\n}\n\nexport default GameView;\n","var map = {\n\t\"./b1.png\": 237,\n\t\"./b2.png\": 238,\n\t\"./b3.png\": 239,\n\t\"./b4.png\": 240,\n\t\"./b5.png\": 241,\n\t\"./b6.png\": 242,\n\t\"./f1.png\": 243,\n\t\"./f2.png\": 244,\n\t\"./f3.png\": 245,\n\t\"./f4.png\": 246,\n\t\"./f5.png\": 247,\n\t\"./fr1.png\": 248,\n\t\"./fr2.png\": 249,\n\t\"./fr3.png\": 250,\n\t\"./fr4.png\": 251,\n\t\"./fr5.png\": 252,\n\t\"./s1.png\": 253\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 236;","module.exports = __webpack_public_path__ + \"static/media/b1.1e6e3003.png\";","module.exports = __webpack_public_path__ + \"static/media/b2.2fd30ec2.png\";","module.exports = __webpack_public_path__ + \"static/media/b3.c5406cbb.png\";","module.exports = __webpack_public_path__ + \"static/media/b4.cdea25a0.png\";","module.exports = __webpack_public_path__ + \"static/media/b5.0aa3d0a6.png\";","module.exports = __webpack_public_path__ + \"static/media/b6.5fc898a0.png\";","module.exports = __webpack_public_path__ + \"static/media/f1.723a94a0.png\";","module.exports = __webpack_public_path__ + \"static/media/f2.518b146b.png\";","module.exports = __webpack_public_path__ + \"static/media/f3.4b7233d0.png\";","module.exports = __webpack_public_path__ + \"static/media/f4.1113394f.png\";","module.exports = __webpack_public_path__ + \"static/media/f5.82abb3a5.png\";","module.exports = __webpack_public_path__ + \"static/media/fr1.41672831.png\";","module.exports = __webpack_public_path__ + \"static/media/fr2.82ff6bd7.png\";","module.exports = __webpack_public_path__ + \"static/media/fr3.2a9d0c31.png\";","module.exports = __webpack_public_path__ + \"static/media/fr4.8a4cdc10.png\";","module.exports = __webpack_public_path__ + \"static/media/fr5.f2e83ce7.png\";","module.exports = __webpack_public_path__ + \"static/media/s1.10133d4e.png\";","module.exports = __webpack_public_path__ + \"static/media/pantzRock.67905212.png\";","var map = {\n\t\"./questionArtist.png\": 256,\n\t\"./questionArtistM.png\": 257,\n\t\"./questionTrack.png\": 258,\n\t\"./questionTrackM.png\": 259\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 255;","module.exports = __webpack_public_path__ + \"static/media/questionArtist.01293a4f.png\";","module.exports = __webpack_public_path__ + \"static/media/questionArtistM.ea78aa37.png\";","module.exports = __webpack_public_path__ + \"static/media/questionTrack.41eb549e.png\";","module.exports = __webpack_public_path__ + \"static/media/questionTrackM.383be077.png\";","import React from 'react';\nimport {Container, Row, Col, Button, Image, InputGroup, FormControl, DropdownButton, Dropdown, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport {useHistory} from 'react-router-dom';\n\nconst StartView = (props) => {\n  const history = useHistory();\n\n  return (\n    <Container className=\"startView\">\n      <Row>\n        <Col>\n        <Image src=\"https://i.imgur.com/u7zri8i.png\"></Image>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={{span: 8, offset: 2}}>\n        <div className=\"infotext\"><b>Welcome to SmartyPantZ, the smartest music quiz on the internet! &#10; Type in your prefered name and start quizzing. Three wrong answers and you lose!</b></div>\n        </Col>\n      </Row>\n\n      <Row style={{marginTop: \"2%\"}}> \n        <Col md={{span:6, offset:3}}> \n          <InputGroup className=\"nameInput\">\n            <FormControl\n              placeholder=\"A superdupercool name\"\n              name=\"username\"\n              aria-label=\"Recipient's username\"\n              aria-describedby=\"basic-addon2\"\n              value={props.username}\n              onChange={(event) => {\n                event.preventDefault();\n                var uName = event.target.value;\n                props.setUsername(uName);\n              }}\n            />\n            <DropdownButton as={InputGroup.Append} variant=\"outline-danger\" title={props.category.toUpperCase()}>\n                {[\"Hits\", \"EDM\", \"Rock\", \"Hip-hop\"].map((genre) => {\n                    return <Dropdown.Item key={genre} onSelect={() => {\n                        props.setCategory(genre);\n                    }}>{genre.toUpperCase()}</Dropdown.Item>\n                })}\n            </DropdownButton>\n            <InputGroup.Append>\n              {!(/^\\S.*$/.test(props.username)) ?   \n              <OverlayTrigger placement=\"right\" delay={{show: 250, hide: 400}} overlay={<Tooltip>Enter a username (starting with a non-whitespace character)</Tooltip>}>\n                <div style={{cursor: 'not-allowed'}}>\n                  <Button style={{ pointerEvents: 'none' }} disabled variant=\"danger\">START</Button>\n                </div>\n              </OverlayTrigger> :\n              <Button variant=\"danger\" onClick={() => history.push('/game')}>START</Button>}\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Button className=\"highscoreButton\" variant=\"outline-danger\" onClick={() => history.push('/highscore')}>HIGHSCORES</Button>\n        </Col>\n      </Row>\n    </Container>);\n}\n\nStartView.propTypes = {\n  username: PropTypes.string.isRequired,\n  setUsername: PropTypes.func.isRequired\n};\n\nexport default StartView;","import StartView from './startView.js';\nimport {connect} from 'react-redux';\nimport React from 'react';\nimport {setUsername, setCategory} from '../actions';\n\nconst StartContainer = (props) => {\n    React.useEffect(() => {\n        // Make sure the background is correct\n        document.getElementsByClassName(\"body\")[0].id = 'CategoryBody';\n    }, []);\n    return <StartView username={props.username} setUsername={props.setUsername} category={props.category} setCategory={props.setCategory}/>\n};\n\nconst mapStateToProps = state => ({\n    username: state.username,\n    category: state.category\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setUsername: username => dispatch(setUsername(username)),\n    setCategory: category => dispatch(setCategory(category))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartContainer);","import React from 'react';\nimport './gameOver.css';\nimport {Container, Row, Col, Button, Image} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport {useHistory} from 'react-router-dom';\n\nconst GameOverView = (props) => {\n  const history = useHistory();\n\n\n  return (\n    <Container className=\"gameOverView\">\n      <Row>\n        <Col md={{span:6, offset:3}}>\n          <Image src=\"https://i.imgur.com/qA66fUX.png\"></Image>\n        </Col>\n      </Row>\n      <Row id=\"highScoreMessage\"><Col>{props.highscoreMessage}</Col></Row>\n      <Row>\n        <Col>\n          <div className=\"infotext\">Score: {props.score}</div>\n        </Col>\n      </Row>\n      <Row style={{marginTop: \"3%\"}}>\n        <Col>\n          <Button style={{marginRight: \"1%\"}} variant=\"outline-dark\" onClick={() => history.push('/game')}>PLAY AGAIN</Button>\n        </Col>\n      </Row>\n      <Row style={{marginTop: \"1%\"}}>\n        <Col>\n          <Button style={{marginRight: \"1%\"}} variant=\"outline-dark\" onClick={() => history.push('/')}>BACK TO START</Button>\n          <Button variant=\"outline-dark\" onClick={() => history.push('/highscore')}>SEE HIGHSCORES</Button>\n        </Col>\n      </Row>\n    </Container>);\n}\n\nGameOverView.propTypes = {\n  score: PropTypes.number.isRequired,\n};\n\nexport default GameOverView;","import GameOverView from './gameOverView.js'\nimport {connect} from 'react-redux';\nimport React from 'react';\nimport {db} from '../util/dbConfig.js';\nimport {useHistory} from 'react-router-dom';\n\nconst GameOverContainer = (props) => {\n    const history = useHistory();\n    const [highscoreMessage, setHighscoreMessage] = React.useState(\"\");\n\n    React.useEffect(()=>{\n        // If the user is reloading they should be directed to start page\n        if (props.username === \"\") history.push('/');\n\n        db.collection(\"highscore\").where(\"category\", \"==\", props.category).orderBy(\"score\", \"desc\").limit(10).get()\n        .then((querySnapshot) => {\n            var queryDocs = querySnapshot.docs;\n            var lastDoc = queryDocs[queryDocs.length - 1];\n            var tenthScore = lastDoc.data().score;\n            setHighscoreMessage(getHighscoreMessage(props.score, tenthScore));\n        });\n    }, []);\n    return <GameOverView highscoreMessage={highscoreMessage}\n    score={props.score}/>;\n};\n\nfunction getHighscoreMessage(currentScore, tenthScore) {\n    var body = document.getElementsByClassName(\"body\")[0];\n    console.log(body.id)\n\n    var message = \"\";\n    if (currentScore > tenthScore) {\n        message = \"Congratulations, you made it to the highscore list :D\";\n        body.id = 'winningBody';\n        var i;\n        for (i = 0; i < 20; i++) {\n            var confettiPiece = document.createElement(\"div\");\n            confettiPiece.className = \"confetti\"\n            body.insertBefore(confettiPiece, body.firstChild)\n        }\n    } else {\n        message = \"Sadly you didn't get on the highscore list :(\";\n        body.id = 'losingBody';\n    }\n    return message;\n}\n\nconst mapStateToProps = state => ({\n    score: state.score,\n    username: state.username,\n    category: state.category\n});\n\nexport default connect(mapStateToProps)(GameOverContainer);","import React from 'react';\nimport {Col, Row, Image, Table, Container, Button, Spinner} from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom';\n\n\nconst HighScoreView = (props) => {\n    const history = useHistory();\n\n    return (\n        <Container className=\"highScoreView\">\n            <Row style={{marginTop: \"2%\"}}>\n                <Col md={{span:2, offset:0}}>\n                    <Row style={{marginTop: \"10%\"}}>\n                        <Button variant=\"outline-danger\" onClick={function(e)\n                            { history.push('/'); \n                            document.getElementsByClassName(\"body\")[0].id = 'CategoryBody'\n                            }}>BACK TO START\n                        </Button>\n                    </Row>\n                </Col>\n                <Col md={{span:8, offset:0}}>\n                    <Image src={\"https://i.imgur.com/nbrayQO.png\"} alt=\"\" />\n                </Col>\n            </Row>\n            <Row style={{marginTop: \"10%\"}}>\n                <Col md={{span:6, offset:3}}>\n                    <Row className=\"justify-content-center\">\n                        <h2>All categories</h2>\n                    </Row>\n                    {generateList(props.allScores)}\n                </Col>\n            </Row>\n            <Row style={{marginTop: \"2%\"}}>\n                <Col style={{marginRight: \"2%\"}}>\n                    <Row className=\"justify-content-center\">\n                        <h2>Hits</h2>\n                    </Row>\n                    {generateList(props.hitsScores)}\n                </Col>\n                <Col>\n                    <Row className=\"justify-content-center\">\n                        <h2>EDM</h2>\n                    </Row>\n                    {generateList(props.EDMScores)}\n                </Col>\n            </Row>\n            <Row style={{marginTop: \"2%\", marginBottom: \"2%\"}}>\n                <Col style={{marginRight: \"2%\"}}>\n                    <Row className=\"justify-content-center\">\n                        <h2>Rock</h2>\n                    </Row>\n                    {generateList(props.rockScores)}\n                </Col>\n                <Col>\n                    <Row className=\"justify-content-center\">\n                        <h2>Hip-hop</h2>\n                    </Row>\n                    {generateList(props.hiphopScores)}\n                </Col>\n            </Row>\n        </Container>);\n}\n\nconst generateList = (scores) => {\n    return <Row className=\"tableBox justify-content-center\">\n        {scores.length === 0 ? <Spinner animation=\"border\"/> :\n        <Table striped borded=\"true\" size=\"sm\">\n            <thead>\n                <tr>\n                <th>Rank</th>\n                <th>Score</th>\n                <th>Name</th>\n                </tr>\n            </thead>\n            <tbody>\n                {scores.map(({score, name}, index) => <tr key={index}><td>{index+1}</td><td>{score}</td><td>{name}</td></tr>)}\n            </tbody>\n        </Table>}\n    </Row>\n}\n\nexport default HighScoreView;","import React from 'react';\nimport HighScoreView from './highScoreView';\nimport {db} from '../util/dbConfig.js';\n\nconst HighScoreContainer = () => {\n    const [allScores, setAllScores] = React.useState([]);\n    const [hitsScores, setHitsScores] = React.useState([]);\n    const [EDMScores, setEDMScores] = React.useState([]);\n    const [rockScores, setRockScores] = React.useState([]);\n    const [hiphopScores, setHiphopScores] = React.useState([]);\n    React.useEffect(()=>{\n        // Make sure the background is correct\n        document.getElementsByClassName(\"body\")[0].id = 'CategoryBody';\n\n        // Fetch all highscore lists from the database\n        getAllScores(setAllScores);\n        getCategoryScores(setHitsScores, \"Hits\");\n        getCategoryScores(setEDMScores, \"EDM\");\n        getCategoryScores(setRockScores, \"Rock\");\n        getCategoryScores(setHiphopScores, \"Hip-hop\");\n    }, []);\n    return <HighScoreView\n            allScores={allScores}\n            hitsScores={hitsScores}\n            EDMScores={EDMScores}\n            rockScores={rockScores}\n            hiphopScores={hiphopScores}\n            />;\n};\n\nconst getAllScores = (setAllScores) => {\n    db.collection(\"highscore\").orderBy(\"score\", \"desc\").limit(10).get()\n        .then((querySnapshot) => {\n            const rows = [];\n            querySnapshot.forEach((doc) => {\n                rows.push({score: doc.data().score, name: doc.data().name});\n            });\n            setAllScores(rows);\n        });\n}\n\nconst getCategoryScores = (setScoreList, category) => {\n    db.collection(\"highscore\").where(\"category\", \"==\", category).orderBy(\"score\", \"desc\").limit(10).get()\n        .then((querySnapshot) => {\n            const rows = [];\n            querySnapshot.forEach((doc) => {\n                rows.push({score: doc.data().score, name: doc.data().name});\n            });\n            setScoreList(rows);\n        });\n}\n\nexport default HighScoreContainer;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Start from './start/startContainer.js';\nimport Game from './game/gameContainer.js';\nimport GameOver from './gameOver/gameOverContainer.js';\nimport HighScore from './highScore/highScoreContainer.js';\n\nconst App = () => (\n  <Router>\n    <Switch>\n        <Route exact path=\"/\">\n          <Start/>\n        </Route>\n        <Route exact path=\"/game\">\n          <Game/>\n        </Route>\n        <Route exact path=\"/gameover\">\n          <GameOver/>\n        </Route>\n        <Route exact path=\"/highscore\">\n          <HighScore/>\n        </Route>\n    </Switch>\n  </Router>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const defaultLives = 3;\n\nconst reducer = (state = {username: \"\", score: 0, lives: defaultLives, category: \"Hits\"}, action) => {\n  switch (action.type) {\n    case 'SET_USERNAME':\n        console.log({username: action.username, score: state.score, lives: state.lives, category: state.category});\n        return {username: action.username, score: state.score, lives: state.lives, category: state.category};\n    case 'SET_SCORE':\n        console.log({username: state.username, score: action.score, lives: state.lives, category: state.category});\n        return {username: state.username, score: action.score, lives: state.lives, category: state.category};\n    case 'SET_LIVES':\n        console.log({username: state.username, score: state.score, lives: action.lives, category: state.category});\n        return {username: state.username, score: state.score, lives: action.lives, category: state.category};\n    case 'SET_CATEGORY':\n        console.log({username: state.username, score: state.score, lives: state.lives, category: action.category});\n        return {username: state.username, score: state.score, lives: state.lives, category: action.category};\n    default:\n        console.log(state);\n        return state;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './game/gameView.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers';\nimport {createStore} from 'redux';\n\n// To deploy, run 'yarn build' and then 'firebase deploy'\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as app from 'firebase/app';\nimport 'firebase/firestore';\n\nconst dbConfig = {\n    apiKey: \"AIzaSyAbWEE-X5hskw_9wvYfoixZoKnPRl9xQBw\",\n    authDomain: \"smartypantz-c6131.firebaseapp.com\",\n    databaseURL: \"https://smartypantz-c6131.firebaseio.com\",\n    projectId: \"smartypantz-c6131\",\n    storageBucket: \"smartypantz-c6131.appspot.com\",\n    messagingSenderId: \"888130110269\",\n    appId: \"1:888130110269:web:dcae88f6c62d5e22867b54\",\n    measurementId: \"G-R2GE08FY8L\"\n};\n\napp.initializeApp(dbConfig);\nconst db = app.firestore();\n\nexport {db};","export const setUsername = username => ({\n    type: 'SET_USERNAME',\n    username\n});\n\nexport const setScore = score => ({\n    type: 'SET_SCORE',\n    score\n});\n\nexport const setLives = lives => ({\n    type: 'SET_LIVES',\n    lives\n});\n\nexport const setCategory = category => ({\n    type: 'SET_CATEGORY',\n    category\n});"],"sourceRoot":""}