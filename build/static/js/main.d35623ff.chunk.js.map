{"version":3,"sources":["util/apiConfig.js","game/gameContainer.js","game/gameView.js","start/startView.js","start/startContainer.js","highScore/highScoreView.js","highScore/highScoreContainer.js","gameOver/gameOverView.js","gameOver/gameOverContainer.js","GameModel.js","App.js","serviceWorker.js","index.js"],"names":["client_id","client_secret","checkAnswer","trackChosen","trackOther","model","setQ","question","setMessage","history","popularity","getLives","decrementLives","push","Game","props","React","useState","track1","setTrack1","track2","setTrack2","message","useEffect","playlistid","console","log","i","Math","floor","random","j","authOptions","url","headers","Buffer","toString","form","grant_type","json","request","require","post","error","response","body","statusCode","token","access_token","options","get","tracks","items","track","getApiPlaylist","opacity","useHistory","GameView","mdOffset","xsOffset","lifeCols","key","md","span","offset","xs","id","style","src","className","alt","name","album","images","onClick","StartView","Container","Row","Col","Image","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","event","preventDefault","username","target","value","setUsername","Append","Button","variant","href","disabled","Start","HighScoreView","onAdd","highScores","h","createElement","Table","striped","borded","size","map","index","score","onSubmit","type","app","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getHighScores","setRows","collection","orderBy","limit","then","querySnapshot","allRows","forEach","doc","data","addToDB","elements","Number","add","HighScoreContainer","rows","GameOverView","GameOver","store","createStore","state","lives","action","GameModel","callback","this","lastObserver","subscribe","lastAction","dispatch","getState","addObserver","getUsername","getScore","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d35623ff.chunk.js","sourcesContent":["var client_id = '02c78a6b532f4efb8e5824c6cff48a57'; // Our client id from Spotify\nvar client_secret = '79ab1ea19083458cb62a68bf6bca4ce5'; // Our secret from Spotify\n//var redirect_uri = 'REDIRECT_URI'; // Your redirect uri, ex http://localhost:8888/callback if localhost is used\n\nexport {client_id, client_secret};","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport GameView from './gameView.js'\nimport {client_id, client_secret} from '../util/apiConfig.js';\n\nconst Game = (props) => {\n\n    /* PLAYLIST VERSION */\n\n    var playlistid = '1Invdu6HejW05i65d0UCTE';\n    const [track1, setTrack1] = React.useState();\n    const [track2, setTrack2] = React.useState();\n    const [question, setQ] = React.useState(1);\n    const [message, setMessage] = React.useState('');\n    \n    \n    React.useEffect( () => {\n        getApiPlaylist(playlistid, client_id, client_secret, setTrack1, setTrack2)\n    },[question, playlistid])\n\n    // Lives\n    var opacity = [1, 1, 1];\n    if (props.model.getLives() === 2) opacity = [1, 1, 0.5];\n    else if (props.model.getLives() === 1) opacity = [1, 0.5, 0.5];\n\n    const history = useHistory();\n\n    return <GameView\n        model={props.model}\n        track1={track1}\n        track2={track2}\n        checkAnswer={(trackChosen) => {\n            if (trackChosen === track1) checkAnswer(trackChosen, track2, props.model, setQ, question, setMessage, history);\n            else checkAnswer(trackChosen, track1, props.model, setQ, question, setMessage, history);\n        }}\n        opacity = {opacity}\n        message = {message}\n        />\n}\n\nfunction getApiPlaylist(playlistid, client_id, client_secret, setTrack1, setTrack2){\n    console.log(\"fetch starting!\")\n\n    var i = Math.floor(Math.random()*100)\n    var j = Math.floor(Math.random()*100)\n\n    \n    console.log('i starten är i ' +i)\n    // your application requests authorization\n    var authOptions = {\n    url: 'https://accounts.spotify.com/api/token',\n    headers: {\n        'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n    },\n    form: {\n        grant_type: 'client_credentials'\n    },\n    json: true\n    };\n    var request = require('request'); // \"Request\" library\n    console.log(\"authOptions is: \" + authOptions)\n  \n    request.post(authOptions, function(error, response, body) {\n        console.log(error)\n        console.log(response.statusCode)\n    if (!error && response.statusCode === 200) {\n        console.log(\"In the if-statement!\")\n        // use the access token to access the Spotify Web API\n        var token = body.access_token;\n        var options = {\n          url: 'https://api.spotify.com/v1/playlists/' + playlistid,\n        //url: 'https://api.spotify.com/v1/tracks/2TpxZ7JUBn3uw46aR7qd6V',\n        headers: {\n            'Authorization': 'Bearer ' + token\n        },\n        json: true\n        };\n  \n        request.get(options, function(error, response, body) {\n            // console.log(\"Body in fetch: \");\n            // console.log(body);\n            // console.log(\"Body.title in fetch: \");\n            // console.log(body.id);\n\n            //setPlaylist(body)\n            //setTrack(body);\n            console.log('här är bodyn: '+body)\n            console.log(body)\n            console.log('här är iet' + i)\n            console.log(\"body.tracks... \" + body.tracks.items[i]);\n            setTrack1(body.tracks.items[i].track);\n            setTrack2(body.tracks.items[j].track);\n  \n  \n        });\n        //return body\n        }\n    });\n  }\n\n\n\nfunction checkAnswer(trackChosen, trackOther, model, setQ, question, setMessage, history){\n    if(trackChosen.popularity>trackOther.popularity){\n        setQ(question + 1);\n        setMessage('Rätt');\n        return true\n    }else{\n        setMessage('Fel');\n        if(model.getLives()>1){\n            model.decrementLives();\n            setQ(question + 1);\n        }else{\n            history.push('/gameover');\n        }\n        return false\n    }\n}\n\n\n\n// Old function to get tracks\n/*\nfunction getApiData(id, client_id, client_secret, setTrack){\n    console.log(\"fetch starting!\")\n    // your application requests authorization\n    var authOptions = {\n    url: 'https://accounts.spotify.com/api/token',\n    headers: {\n        'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n    },\n    form: {\n        grant_type: 'client_credentials'\n    },\n    json: true\n    };\n    var request = require('request'); // \"Request\" library\n    console.log(\"authOptions is: \" + authOptions)\n  \n    request.post(authOptions, function(error, response, body) {\n        console.log(error)\n        console.log(response.statusCode)\n    if (!error && response.statusCode === 200) {\n        console.log(\"In the if-statement!\")\n        // use the access token to access the Spotify Web API\n        var token = body.access_token;\n        var options = {\n          url: 'https://api.spotify.com/v1/tracks/' + id,\n        //url: 'https://api.spotify.com/v1/tracks/2TpxZ7JUBn3uw46aR7qd6V',\n        headers: {\n            'Authorization': 'Bearer ' + token\n        },\n        json: true\n        };\n  \n        request.get(options, function(error, response, body) {\n            console.log(\"Body in fetch: \");\n            console.log(body);\n\n            setTrack(body)\n            //setTrack(body);\n  \n  \n        });\n        //return body\n        }\n    });\n}\n*/\n\n\nexport default Game;\n","import React from 'react';\nimport {Container, Row, Col, Image} from 'react-bootstrap';\n\n\n\nfunction GameView(props) {\n    // Lives\n    const mdOffset = [9, \"auto\", \"auto\"];\n    const xsOffset = [6, \"auto\", \"auto\"];\n    var lifeCols = [];\n    for (var i = 0; i < 3; i++) {\n      lifeCols.push(\n        <Col key={i} md={{span:1, offset:mdOffset[i]}} xs={{span:2, offset:xsOffset[i]}}>\n          <Image id=\"pantzLife\" style={{opacity: props.opacity[i]}} src=\"https://i.imgur.com/Zrdtb9n.png\"></Image>\n        </Col>\n      );\n    }\n\n    return (\n      <Container className='gameView'>\n        <Row> {/* TOP-BAR. Includes: PantZ life*/}\n          {lifeCols}\n        </Row>\n\n        <Row> {/* GAME HEADING */}\n          <Col>\n          <Image id=\"gameQuestion\" src={\"https://i.imgur.com/lXXGtBV.png\"} alt=\"\" />\n          </Col>\n        </Row>\n\n        <Row id=\"gamePlay\">  {/* GAME PLAY */}\n          <Col  md={{span:2, offset:3}}> {/* TRACK 1 */}\n            <Row>\n              <h5>{props.track1?props.track1.name:null}</h5>\n            </Row>\n            <Row>\n              <Image src={props.track1?props.track1.album.images[\"0\"].url:null}  onClick={() => props.checkAnswer(props.track1)} alt=\"\" />\n            </Row>\n          </Col>\n\n          <Col  md={{span:2, offset:2}}> {/* TRACK 2 */}\n          <Row>\n            <h5>{props.track2?props.track2.name:null}</h5>\n          </Row>\n          <Row>\n            <Image src={props.track2?props.track2.album.images[\"0\"].url:null} onClick={() => props.checkAnswer(props.track2)} alt=\"\" />\n          </Row>\n          </Col>\n        </Row>\n        <Row> {/* MESSAGE RÄTT/FEL */}\n          <Col>\n          <div className=\"result\">{props.message}</div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default GameView;\n","import React from 'react';\nimport {Container, Row, Col, Button, Image, InputGroup, FormControl} from 'react-bootstrap';\n\n\nfunction StartView(props) {\n  console.log(props);\n  return (\n    <Container className=\"startView\">\n      <Row>\n        <Col>\n        <Image src=\"https://i.imgur.com/u7zri8i.png\"></Image>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n        <div className=\"infotext\">Welcome to SmartyPantZ, the smartest music quiz on the internet! &#10; Type in your prefered name and start quizzing. Three wrong answers and you lose!</div>\n        </Col>\n      </Row>\n\n\n      <Row>\n        \n        <Col md={{span:4, offset:4}}> \n        <InputGroup className=\"nameInput\">\n          <FormControl\n            placeholder=\"A superdupercool name\"\n            name=\"username\"\n            aria-label=\"Recipient's username\"\n            aria-describedby=\"basic-addon2\"\n            onChange={(event) => {\n              event.preventDefault();\n              var username = event.target.value\n              props.setUsername(username);\n            }}\n          />\n          <InputGroup.Append>\n            <Button variant=\"outline-danger\" href=\"/game\" onClick={props.model.setUsername(props.username)} disabled={props.username===\"\"}>START</Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        </Col>\n\n        \n        \n      </Row>\n\n      <Row>\n        <Col>\n        <Button className=\"highscoreButton\" variant=\"outline-danger\" href=\"/highscore\">HIGHSCORE</Button>\n        </Col>\n      </Row>\n\n    </Container>\n  \n    \n    )\n}\n\n\nexport default StartView;","import React from 'react';\nimport StartView from './startView.js'\n\nconst Start = (props) => {\n    const [username, setUsername] = React.useState(\"\");\n    return <StartView model={props.model} username={username} setUsername={setUsername}\n    />\n}\n\nexport default Start;","import React from 'react';\nimport {Col, Row, Image, Table, Container} from 'react-bootstrap';\n\n\nfunction HighScoreView({onAdd, highScores}) {\n    const h = React.createElement;\n\n    return (\n        <Container className=\"highScoreView\">\n        <Row> \n      <Col>\n      <Image src={\"https://i.imgur.com/nbrayQO.png\"} alt=\"\" />\n      </Col>\n    </Row>\n    <Row className=\"tableBox\">\n        <Table striped borded=\"true\" size=\"sm\">\n        <thead>\n            <tr>\n            <th>Rank</th>\n            <th>Name</th>\n            <th>Score</th>\n            </tr>\n        </thead>\n        <tbody>\n            {highScores.map(({score, name}, index) => <tr key={index}><td>{index+1}</td><td>{score}</td><td>{name}</td></tr>)}\n        </tbody>\n        </Table>\n        </Row>\n        <Row>\n        <h4>Add to database</h4>\n        {h(\"form\", {onSubmit: onAdd},\n            h(\"label\", {key:\"name\"}, \"Name:\", h(\"input\", {type:\"text\", name:\"name\"})),\n            h(\"label\", {key:\"score\"}, \"Score:\", h(\"input\", {type:\"text\", name:\"score\"})),\n            h(\"input\", {key:\"submit\", type:\"submit\", value:\"Add\"})\n        )}\n        </Row>\n    </Container>)\n    \n    \n    \n    \n    // <div>\n    //     <h2>THE 10 MOST SMARTYPANTZ</h2>\n    //     <table>\n    //         <tbody>\n    //             <tr><th>Rank</th><th>Score</th><th>Name</th></tr>\n    //             {highScores.map(({score, name}, index) => <tr key={index}><td>{index+1}</td><td>{score}</td><td>{name}</td></tr>)}\n    //         </tbody>\n    //     </table>\n    //     <h4>Add to database</h4>\n    //     {h(\"form\", {onSubmit: onAdd},\n    //         h(\"label\", {key:\"name\"}, \"Name:\", h(\"input\", {type:\"text\", name:\"name\"})),\n    //         h(\"label\", {key:\"score\"}, \"Score:\", h(\"input\", {type:\"text\", name:\"score\"})),\n    //         h(\"input\", {key:\"submit\", type:\"submit\", value:\"Add\"})\n    //     )}\n    // </div>);\n}\n\nexport default HighScoreView;","import React from 'react';\n//import { FirebaseContext } from '../firebase';\nimport HighScoreView from './highScoreView';\nimport * as app from 'firebase/app';\nimport 'firebase/firestore';\n\nconst config = {\n    apiKey: \"AIzaSyAbWEE-X5hskw_9wvYfoixZoKnPRl9xQBw\",\n    authDomain: \"smartypantz-c6131.firebaseapp.com\",\n    databaseURL: \"https://smartypantz-c6131.firebaseio.com\",\n    projectId: \"smartypantz-c6131\",\n    storageBucket: \"smartypantz-c6131.appspot.com\",\n    messagingSenderId: \"888130110269\",\n    appId: \"1:888130110269:web:dcae88f6c62d5e22867b54\",\n    measurementId: \"G-R2GE08FY8L\"\n};\n\napp.initializeApp(config);\nconst db = app.firestore();\n\nconst HighScoreContainer = () => {\n    const [rows, setRows] = React.useState([]);\n    React.useEffect(()=>{\n        getHighScores(setRows);\n    }, []);\n    return <HighScoreView onAdd={addToDB} highScores={rows}/>;\n};\n\nconst getHighScores = (setRows) => {\n    db.collection(\"highscore\").orderBy(\"score\", \"desc\").limit(10).get()\n        .then((querySnapshot) => {\n            const allRows = [];\n            querySnapshot.forEach((doc) => {\n                allRows.push({score: doc.data().score, name: doc.data().name});\n            });\n            setRows(allRows);\n        });\n}\n\nconst addToDB = (event) => {\n    event.preventDefault();\n    var name = event.target.elements[\"name\"].value;\n    var score = Number(event.target.elements[\"score\"].value);\n    db.collection(\"highscore\").add({\n        name: name,\n        score: score\n    });\n}\n\nexport default HighScoreContainer;","import React from 'react';\n\nfunction GameOverView() {\n    return (\n      <div>\n        <h2>GameOverView</h2>\n      </div>\n    );\n}\n\nexport default GameOverView;","import React from 'react';\nimport GameOverView from './gameOverView.js'\n\n\nconst GameOver = (props) => {\n    return <GameOverView/>\n}\n\nexport default GameOver;","import {createStore} from 'redux';\n\nconst SET_USERNAME = 'SET_USERNAME';\nconst SET_SCORE = 'SET_SCORE';\nconst SET_LIVES = 'SET_LIVES';\nconst defaultLives = 3;\n\nconst store= createStore(reducer);\n\nclass GameModel {\n    addObserver(callback){\n        this.lastObserver = store.subscribe(()=>\n        callback(this.lastAction));                                             \n    }\n    setUsername(name){\n        store.dispatch(this.lastAction={ type: SET_USERNAME, username: name });\n    }\n    getUsername(){\n        return store.getState().username;\n    }\n    incrementScore(){\n        store.dispatch(this.lastAction={ type: SET_SCORE, score: store.getState().score + 1 });\n    }\n    resetScore(){\n        store.dispatch(this.lastAction={ type: SET_SCORE, score: 0 });\n    }\n    getScore(){\n        return store.getState().score;\n    }\n    decrementLives(){\n        store.dispatch(this.lastAction={ type: SET_LIVES, lives: store.getState().lives - 1 });\n    }\n    resetLives(){\n        store.dispatch(this.lastAction={ type: SET_LIVES, lives: defaultLives });\n    }\n    getLives(){\n        return store.getState().lives;\n    }\n}\n\nfunction reducer(state={username: \"\", score: 0, lives: defaultLives}, action) {\n    switch(action.type) {\n        case SET_USERNAME:\n            return {username: action.username, score: state.score, lives: state.lives};\n        case SET_SCORE:\n            return {username: state.username, score: action.score, lives: state.lives};\n        case SET_LIVES:\n            return {username: state.username, score: state.score, lives: action.lives}\n        default:\n            return state;\n    }   \n}\n\nexport default GameModel;","import React from 'react';\n// import logo from './logo.svg';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n// import Navigation from './components/Navigation';\nimport Start from './start/startContainer.js'\nimport Game from './game/gameContainer.js'\nimport HighScoreContainer from './highScore/highScoreContainer.js'\nimport GameOver from './gameOver/gameOverContainer.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport GameModel from './GameModel.js';\n\nconst model = new GameModel();\nmodel.addObserver(() => {\n  console.log(\"UPDATED STATE:\");\n  console.log(\"Username: \", model.getUsername());\n  console.log(\"Score: \", model.getScore());\n  console.log(\"Lives: \", model.getLives());\n})\n\nfunction App() {\n  \n  return (\n    <Router>\n      <Switch>\n          <Route exact path=\"/\">\n            <Start model = {model}\n            />\n          </Route>\n          <Route path=\"/game\">\n            <Game model = {model}\n            />\n          </Route>\n          <Route exact path=\"/highscore\">\n            <HighScoreContainer />\n          </Route>\n          <Route exact path=\"/gameover\">\n            <GameOver />\n          </Route>\n\n      </Switch>\n    </Router>\n  );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import {Provider} from 'react-redux';\n//import {createStore} from 'redux';\n//import reducer from 'GameModel';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import { FirebaseContext } from './firebase';\n\n//const store = createStore(reducer);\n//<Provider store = {store}></Provider>\n//</Provider>\n\n//<FirebaseContext.Provider value={db}>\n//</FirebaseContext.Provider>\n\nReactDOM.render(\n    <App />\n    ,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}