{"version":3,"sources":["util/apiConfig.js","game/gameContainer.js","game/modal.js","game/gameView.js","start/startView.js","start/startContainer.js","gameOver/gameOverView.js","gameOver/gameOverContainer.js","highScore/highScoreView.js","highScore/highScoreContainer.js","App.js","serviceWorker.js","reducers/index.js","index.js","actions/index.js","util/dbConfig.js"],"names":["client_id","client_secret","checkAnswer","trackChosen","trackOther","username","score","setScore","lives","setLives","setMessage","history","setModalShow","popularity","style","color","className","name","db","collection","add","Number","push","connect","state","category","dispatch","props","useHistory","React","useState","track1","setTrack1","track2","setTrack2","question","setQ","message","countdown","setCountdown","time","setTime","modalShow","statsMessage","setStatsMessage","useEffect","i","interval","setInterval","clearInterval","orderBy","get","then","querySnapshot","scores","forEach","doc","data","currentScore","length","lesserPoints","findIndex","num","Math","round","calculatePercent","console","log","floor","random","j","playlistid","authOptions","url","headers","Buffer","toString","form","grant_type","json","request","require","post","error","response","body","statusCode","token","access_token","options","tracks","items","track","getApiPlaylist","opacity","nextQuestion","MyVerticallyCenteredModal","Modal","size","aria-labelledby","centered","Body","Footer","Button","onClick","onHide","Row","Col","md","span","offset","Image","src","album","images","alt","artists","GameView","xsOffset","lifeCols","key","xs","id","Container","fluid","marginTop","variant","height","ProgressBar","animated","striped","now","show","StartView","InputGroup","FormControl","placeholder","aria-label","aria-describedby","value","onChange","event","preventDefault","uName","target","setUsername","DropdownButton","as","Append","title","map","genre","Dropdown","Item","onSelect","setCategory","disabled","GameOverView","marginRight","HighScoreView","Table","borded","highScores","index","getHighScores","setRows","limit","allRows","HighScoreContainer","rows","App","exact","path","Boolean","window","location","hostname","match","reducer","action","type","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","app","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId"],"mappings":"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","file":"static/js/main.dc386dfe.chunk.js","sourcesContent":["var client_id = '02c78a6b532f4efb8e5824c6cff48a57'; // Our client id from Spotify\nvar client_secret = '79ab1ea19083458cb62a68bf6bca4ce5'; // Our secret from Spotify\n//var redirect_uri = 'REDIRECT_URI'; // Your redirect uri, ex http://localhost:8888/callback if localhost is used\n\nexport {client_id, client_secret};","import React from 'react';\nimport GameView from './gameView.js';\nimport {client_id, client_secret} from '../util/apiConfig.js';\nimport {db} from '../util/dbConfig.js';\nimport {useHistory} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {setScore, setLives} from '../actions';\nimport PropTypes from 'prop-types';\n\nconst Game = (props) => {\n    const history = useHistory();\n\n    /* PLAYLIST VERSION */\n    const [track1, setTrack1] = React.useState();\n    const [track2, setTrack2] = React.useState();\n    const [question, setQ] = React.useState(0);\n    const [message, setMessage] = React.useState('');\n    const [countdown, setCountdown] = React.useState(5);\n    const [time, setTime] = React.useState(100);\n    const [modalShow, setModalShow] = React.useState(false);\n    const [statsMessage, setStatsMessage] = React.useState(\"\");\n\n    const nextQuestion = () => setQ(question + 1);\n\n    // Start countdown and reset score and lives first time\n    React.useEffect(() => {\n        props.setScore(0);\n        props.setLives(3);\n        setCountdown(5);\n        var i = 5;\n        const interval = setInterval(() => {\n            setCountdown(countdown => countdown - 1)\n            --i;\n            if (i === 0) {\n                clearInterval(interval);\n                setQ(question+1);\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    // Start timebar, load new question and load new stats\n    React.useEffect(() => {\n        if (countdown < 1 && !modalShow) {\n            setTime(100);\n            var i = 100;\n            const interval = setInterval(() => {\n                setTime(time => time - 1);\n                --i;\n                // delay of setTime()\n                if (i === -5) {\n                    clearInterval(interval);\n                    checkAnswer(null, null, props.username, props.score, props.setScore, props.lives, props.setLives, setMessage, history, setModalShow);\n                }\n            }, 100);\n            if (question > 4) {\n                db.collection(\"highscore\").orderBy(\"score\").get()\n                    .then((querySnapshot) => {\n                        const scores = [];\n                        querySnapshot.forEach((doc) => {\n                            scores.push(doc.data().score);\n                        });\n                        setStatsMessage(calculatePercent(props.score, scores));\n                    });\n            }\n            getApiPlaylist(props.category, client_id, client_secret, setTrack1, setTrack2);\n            return () => clearInterval(interval);\n        }\n    }, [question, modalShow]);\n\n    // Lives\n    var opacity = [1, 1, 1];\n    if (props.lives === 2) opacity = [1, 1, 0.5];\n    else if (props.lives === 1) opacity = [1, 0.5, 0.5];\n\n    return <GameView\n        score={props.score}\n        opacity = {opacity}\n        track1={track1}\n        track2={track2}\n        checkAnswer={(trackChosen) => {\n            if (trackChosen === track1) checkAnswer(trackChosen, track2, props.username, props.score, props.setScore, props.lives, props.setLives, setMessage, history, setModalShow);\n            else checkAnswer(trackChosen, track1, props.username, props.score, props.setScore, props.lives, props.setLives, setMessage, history, setModalShow);\n        }}\n        message = {message}\n        countdown= {countdown}\n        time = {time}\n        modalShow={modalShow}\n        setModalShow={setModalShow}\n        nextQuestion={nextQuestion}\n        statsMessage={statsMessage}/>\n}\n\nGame.propTypes = {\n    score: PropTypes.number.isRequired,\n    lives: PropTypes.number.isRequired,\n    category: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    setScore: PropTypes.func.isRequired,\n    setLives: PropTypes.func.isRequired\n};\n\nfunction getApiPlaylist(category, client_id, client_secret, setTrack1, setTrack2){\n    console.log(\"fetch starting!\");\n\n    var i = Math.floor(Math.random()*100);\n    var j = i;\n    while (j === i) {\n        j = Math.floor(Math.random()*100);\n    }\n\n    console.log('i starten är i ' +i);\n\n    // your application requests authorization\n    var authOptions = {\n        url: 'https://accounts.spotify.com/api/token',\n        headers: {\n            'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n        },\n        form: {\n            grant_type: 'client_credentials'\n        },\n        json: true\n    };\n    var request = require('request'); // \"Request\" library\n    \n    console.log(\"authOptions is: \" + authOptions);\n    \n    var playlistid;\n    console.log(category);\n    switch (category) {\n        case \"EDM\":\n            // EDM Hits 2020\n            playlistid = '6KU6tm70eecXvDNITltN3h';\n            break;\n        case \"Rock\":\n            // Rock Classics\n            playlistid = '37i9dQZF1DWXRqgorJj26U';\n            break;\n        case \"Hip-hop\":\n            // Get Turnt\n            playlistid = '37i9dQZF1DWY4xHQp97fN6';\n            break;\n        default:\n            playlistid = '4hvCIDjqQBWj8uz5jPntNf';\n    }\n    console.log(playlistid);\n\n    request.post(authOptions, function(error, response, body) {\n        console.log(error);\n        console.log(response.statusCode);\n        if (!error && response.statusCode === 200) {\n            console.log(\"In the if-statement!\");\n\n            // use the access token to access the Spotify Web API\n            var token = body.access_token;\n            var options = {\n                url: 'https://api.spotify.com/v1/playlists/' + playlistid,\n                //url: 'https://api.spotify.com/v1/tracks/2TpxZ7JUBn3uw46aR7qd6V',\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                },\n                json: true\n            };\n    \n            request.get(options, function(error, response, body) {\n                // console.log(\"Body in fetch: \");\n                // console.log(body);\n                // console.log(\"Body.title in fetch: \");\n                // console.log(body.id);\n\n                //setPlaylist(body)\n                //setTrack(body);\n                console.log('här är bodyn: '+body);\n                console.log(body);\n                console.log('här är iet' + i);\n                console.log(\"body.tracks... \" + body.tracks.items[i]);\n                setTrack1(body.tracks.items[i].track);\n                setTrack2(body.tracks.items[j].track);\n            });\n            //return body\n        }\n    });\n}\n\nfunction checkAnswer(trackChosen, trackOther, username, score, setScore, lives, setLives, setMessage, history, setModalShow) {\n    if (trackChosen !== null && trackChosen.popularity>trackOther.popularity) {\n        setScore(score + 1);\n        setMessage(<div><b style={{ color: '#84fab0'}}> You're truly a smartyPant! </b><br /><div className=\"innerText\"><i>{trackChosen.name}</i> has popularity <b>{trackChosen.popularity}</b> and <i>{trackOther.name}</i> <b>{trackOther.popularity}</b></div></div>);\n        setModalShow(true);\n        return true;\n    } else {\n        if (trackChosen !== null) setMessage(<div><b style={{ color: 'red'}}> Oh you dumb sock! </b><br /><div className=\"innerText\"><i>{trackChosen.name}</i> has popularity <b>{trackChosen.popularity}</b> and <i>{trackOther.name}</i> <b>{trackOther.popularity}</b></div></div>);\n        else setMessage(<div><b style={{  color: '#9f0205'}}> Oh you sleepy sock! You didn't make it in time.</b><div className=\"innerText\">Inner text</div></div>);\n\n        if (lives > 1) {\n            setLives(lives - 1);\n        } else {\n            db.collection(\"highscore\").add({\n                name: username,\n                score: Number(score)\n            });\n            history.push('/gameover');\n        }\n        setModalShow(true);\n        return false;\n    }\n}\n\nfunction calculatePercent(currentScore, scores) {\n    var length = scores.length;\n    var lesserPoints = scores.findIndex((num) => currentScore <= num);\n    var percent = 100 - Math.round(lesserPoints/length * 100);\n    return \"Keep it up! Only \" + percent + \" % has got this far!\";\n}\n\n// Old function to get tracks\n/*\nfunction getApiData(id, client_id, client_secret, setTrack){\n    console.log(\"fetch starting!\")\n    // your application requests authorization\n    var authOptions = {\n    url: 'https://accounts.spotify.com/api/token',\n    headers: {\n        'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n    },\n    form: {\n        grant_type: 'client_credentials'\n    },\n    json: true\n    };\n    var request = require('request'); // \"Request\" library\n    console.log(\"authOptions is: \" + authOptions)\n  \n    request.post(authOptions, function(error, response, body) {\n        console.log(error)\n        console.log(response.statusCode)\n    if (!error && response.statusCode === 200) {\n        console.log(\"In the if-statement!\")\n        // use the access token to access the Spotify Web API\n        var token = body.access_token;\n        var options = {\n          url: 'https://api.spotify.com/v1/tracks/' + id,\n        //url: 'https://api.spotify.com/v1/tracks/2TpxZ7JUBn3uw46aR7qd6V',\n        headers: {\n            'Authorization': 'Bearer ' + token\n        },\n        json: true\n        };\n  \n        request.get(options, function(error, response, body) {\n            console.log(\"Body in fetch: \");\n            console.log(body);\n\n            setTrack(body)\n            //setTrack(body);\n  \n  \n        });\n        //return body\n        }\n    });\n}\n*/\n\nconst mapStateToProps = state => ({\n    score: state.score,\n    lives: state.lives,\n    category: state.category,\n    username: state.username\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setScore: score => dispatch(setScore(score)),\n    setLives: lives => dispatch(setLives(lives))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React from 'react';\nimport {Modal, Button} from 'react-bootstrap';\n\nfunction MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n\n        <Modal.Body>\n          {props.message}\n        </Modal.Body>\n        <Modal.Footer>\n        <Button\n        onClick={() => (\n            props.nextQuestion(),\n            props.onHide()\n        )}>\n        NEXT QUESTION\n      </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\nexport default MyVerticallyCenteredModal;","import React from 'react';\nimport {Container, Row, Col, Image, ProgressBar, Button} from 'react-bootstrap';\nimport MyVerticallyCenteredModal from './modal.js';\nimport {useHistory} from 'react-router-dom';\n\nconst GameView = (props) => {\n  const history = useHistory();\n\n  // Lives\n  var xsOffset = [6, 0, 0];\n  var lifeCols = [];\n  for (let i = 0; i < 3; i++) {\n    lifeCols.push(\n      <Col key={i} md={{span:1, offset:0}} xs={{span:2, offset:xsOffset[i]}}>\n        <Image id=\"pantzLife\" style={{opacity: props.opacity[i]}} src=\"https://i.imgur.com/Zrdtb9n.png\"></Image>\n      </Col>\n    );\n  }\n\n  return (\n    <Container className='gameView' fluid>\n      {/* TOP-BAR. Includes: PantZ life*/}\n      <Row>\n        <Col style={{marginTop: \"4%\"}} md={{span:2, offset:0}}>\n          <Button variant=\"outline-danger\" onClick={() => history.push('/')}>LEAVE GAME</Button>\n        </Col>\n        <Col style={{marginTop: \"4%\"}} md={{span:2, offset:0}}>\n          <h2>Score: {props.score}</h2>\n        </Col>\n        <Col style={{marginTop: \"4%\"}} md={{span:1, offset:4}}>\n          <h2>Lives: </h2>\n        </Col>\n        {lifeCols}\n      </Row>\n\n      <Row><Col>{props.statsMessage}</Col></Row>\n\n      <Row> {/* GAME HEADING */}\n        <Col>\n        <Image id=\"gameQuestion\" src={\"https://i.imgur.com/lXXGtBV.png\"} alt=\"\" />\n        </Col>\n      </Row>\n      \n      <Row id=\"gamePlay\">  {/* GAME PLAY */}\n        <Col style={{height: \"350px\"}}>\n          {options(props)}\n        </Col>\n      </Row>\n      <Row style={{marginTop: \"2%\"}}>\n        <Col md={{span: 8, offset: 2}}>\n          <ProgressBar animated striped variant=\"danger\" now={(props.countdown > 0 ? 100 : props.time)}/>\n        </Col>\n      </Row>\n      <Row> {/* MESSAGE RÄTT/FEL */}\n        <Col>\n          <MyVerticallyCenteredModal\n            show={props.modalShow}\n            onHide={() => props.setModalShow(false)}\n            message={props.message}\n            setQ={props.setQ}\n            nextQuestion={props.nextQuestion}/>\n        </Col>\n      </Row>\n    </Container>);\n}\n\nconst options = (props) => {\n  if (props.countdown > 0) {\n    return (<div>\n      <h2>Get ready</h2>\n      <h1 className=\"h0\" >{props.countdown}</h1>\n    </div>)\n  } else {\n    return (<div>\n      <Row>\n        <Col md={{span:3, offset:2}}>\n        <h4>{props.track1?props.track1.name:null}</h4>\n        </Col>\n        <Col md={{span:3, offset:2}}>\n        <h4>{props.track2?props.track2.name:null}</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={{span:3, offset:2}}>\n          <Image src={props.track1?props.track1.album.images[\"0\"].url:null}  onClick={() => props.checkAnswer(props.track1)} alt=\"\" />\n          <Row><Col>By {props.track1?props.track1.artists[0].name:null}</Col></Row>\n\n        </Col>\n        <Col md={{span:3, offset:2}}>\n          <Image src={props.track2?props.track2.album.images[\"0\"].url:null} onClick={() => props.checkAnswer(props.track2)} alt=\"\" />\n          <Row><Col>By {props.track2?props.track2.artists[0].name:null}</Col></Row>\n\n        </Col>\n      </Row>\n    </div>)\n  }\n}\n\nexport default GameView;\n","import React from 'react';\nimport {Container, Row, Col, Button, Image, InputGroup, FormControl, DropdownButton, Dropdown} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport {useHistory} from 'react-router-dom';\n\nconst StartView = (props) => {\n  const history = useHistory();\n\n  return (\n    <Container className=\"startView\">\n      <Row>\n        <Col>\n        <Image src=\"https://i.imgur.com/u7zri8i.png\"></Image>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={{span: 8, offset: 2}}>\n        <div className=\"infotext\"><b>Welcome to SmartyPantZ, the smartest music quiz on the internet! &#10; Type in your prefered name and start quizzing. Three wrong answers and you lose!</b></div>\n        </Col>\n      </Row>\n\n      <Row style={{marginTop: \"2%\"}}> \n        <Col md={{span:6, offset:3}}> \n          <InputGroup className=\"nameInput\">\n            <FormControl\n              placeholder=\"A superdupercool name\"\n              name=\"username\"\n              aria-label=\"Recipient's username\"\n              aria-describedby=\"basic-addon2\"\n              value={props.username}\n              onChange={(event) => {\n                event.preventDefault();\n                var uName = event.target.value;\n                props.setUsername(uName);\n              }}\n            />\n            <DropdownButton as={InputGroup.Append} variant=\"outline-danger\" title={props.category}>\n                {[\"EDM\", \"Rock\", \"Hip-hop\"].map((genre) => {\n                    return <Dropdown.Item key={genre} onSelect={() => {\n                        props.setCategory(genre);\n                    }}>{genre}</Dropdown.Item>\n                })}\n            </DropdownButton>\n            <InputGroup.Append>\n              <Button variant=\"danger\" disabled={props.username === \"\"} onClick={() => history.push('/game')}>START</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Button className=\"highscoreButton\" variant=\"outline-danger\" onClick={() => history.push('/highscore')}>HIGHSCORES</Button>\n        </Col>\n      </Row>\n    </Container>);\n}\n\nStartView.propTypes = {\n  username: PropTypes.string.isRequired,\n  setUsername: PropTypes.func.isRequired\n};\n\nexport default StartView;","import StartView from './startView.js';\nimport {connect} from 'react-redux';\nimport {setUsername, setCategory} from '../actions';\n\nconst mapStateToProps = state => ({\n    username: state.username,\n    category: state.category\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setUsername: username => dispatch(setUsername(username)),\n    setCategory: category => dispatch(setCategory(category))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartView);","import React from 'react';\nimport './gameOver.css';\nimport {Container, Row, Col, Button, Image} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport {useHistory} from 'react-router-dom';\n\nconst GameOverView = (props) => {\n  const history = useHistory();\n  \n  return (\n    <Container className=\"gameOverView\">\n      <Row>\n        <Col md={{span:6, offset:3}}>\n          <Image src=\"https://imgur.com/BJKeDIh.png\"></Image>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div className=\"infotext\">Score: {props.score}</div>\n        </Col>\n      </Row>\n      <Row style={{marginTop: \"3%\"}}>\n        <Col>\n          <Button style={{marginRight: \"1%\"}} variant=\"outline-dark\" onClick={() => history.push('/game')}>PLAY AGAIN</Button>\n        </Col>\n      </Row>\n      <Row style={{marginTop: \"1%\"}}>\n        <Col>\n          <Button style={{marginRight: \"1%\"}} variant=\"outline-dark\" onClick={() => history.push('/')}>BACK TO START</Button>\n          <Button variant=\"outline-dark\" onClick={() => history.push('/highscore')}>SEE HIGHSCORES</Button>\n        </Col>\n      </Row>\n    </Container>);\n}\n\nGameOverView.propTypes = {\n  score: PropTypes.number.isRequired,\n};\n\nexport default GameOverView;","import GameOverView from './gameOverView.js'\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = state => ({\n    score: state.score,\n});\n\nexport default connect(mapStateToProps)(GameOverView);","import React from 'react';\nimport {Col, Row, Image, Table, Container, Button} from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom';\n\nconst HighScoreView = (props) => {\n    const history = useHistory();\n\n    return (\n        <Container className=\"highScoreView\">\n            <Row style={{marginTop: \"2%\"}}>\n                <Col md={{span:2, offset:0}}>\n                    <Row style={{marginTop: \"30%\"}}>\n                        <Button variant=\"outline-danger\" onClick={() => history.push('/')}>BACK TO START</Button>\n                    </Row>\n                </Col>\n                <Col md={{span:8, offset:0}}>\n                    <Image src={\"https://i.imgur.com/nbrayQO.png\"} alt=\"\" />\n                </Col>\n            </Row>\n            <Row className=\"tableBox\">\n                <Table striped borded=\"true\" size=\"sm\">\n                    <thead>\n                        <tr>\n                        <th>Rank</th>\n                        <th>Score</th>\n                        <th>Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.highScores.map(({score, name}, index) => <tr key={index}><td>{index+1}</td><td>{score}</td><td>{name}</td></tr>)}\n                    </tbody>\n                </Table>\n            </Row>\n        </Container>);\n}\n\nexport default HighScoreView;","import React from 'react';\nimport HighScoreView from './highScoreView';\nimport {db} from '../util/dbConfig.js';\n\nconst HighScoreContainer = () => {\n    const [rows, setRows] = React.useState([]);\n    React.useEffect(()=>{\n        getHighScores(setRows);\n    }, []);\n    return <HighScoreView highScores={rows}/>;\n};\n\nconst getHighScores = (setRows) => {\n    db.collection(\"highscore\").orderBy(\"score\", \"desc\").limit(10).get()\n        .then((querySnapshot) => {\n            const allRows = [];\n            querySnapshot.forEach((doc) => {\n                allRows.push({score: doc.data().score, name: doc.data().name});\n            });\n            setRows(allRows);\n        });\n}\n\nexport default HighScoreContainer;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Start from './start/startContainer.js';\nimport Game from './game/gameContainer.js';\nimport GameOver from './gameOver/gameOverContainer.js';\nimport HighScoreContainer from './highScore/highScoreContainer.js';\n\nconst App = () => (\n  <Router>\n    <Switch>\n        <Route exact path=\"/\">\n          <Start/>\n        </Route>\n        <Route exact path=\"/game\">\n          <Game/>\n        </Route>\n        <Route exact path=\"/gameover\">\n          <GameOver/>\n        </Route>\n        <Route exact path=\"/highscore\">\n          <HighScoreContainer/>\n        </Route>\n    </Switch>\n  </Router>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const defaultLives = 3;\n\nconst reducer = (state = {username: \"\", score: 0, lives: defaultLives, category: \"Category\"}, action) => {\n  switch (action.type) {\n    case 'SET_USERNAME':\n        console.log({username: action.username, score: state.score, lives: state.lives, category: state.category});\n        return {username: action.username, score: state.score, lives: state.lives, category: state.category};\n    case 'SET_SCORE':\n        console.log({username: state.username, score: action.score, lives: state.lives, category: state.category});\n        return {username: state.username, score: action.score, lives: state.lives, category: state.category};\n    case 'SET_LIVES':\n        console.log({username: state.username, score: state.score, lives: action.lives, category: state.category});\n        return {username: state.username, score: state.score, lives: action.lives, category: state.category};\n    case 'SET_CATEGORY':\n        console.log({username: state.username, score: state.score, lives: state.lives, category: action.category});\n        return {username: state.username, score: state.score, lives: state.lives, category: action.category};\n    default:\n        console.log(state);\n        return state;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers';\nimport {createStore} from 'redux';\n\n// To deploy, run 'yarn build' and then 'firebase deploy'\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const setUsername = username => ({\n    type: 'SET_USERNAME',\n    username\n});\n\nexport const setScore = score => ({\n    type: 'SET_SCORE',\n    score\n});\n\nexport const setLives = lives => ({\n    type: 'SET_LIVES',\n    lives\n});\n\nexport const setCategory = category => ({\n    type: 'SET_CATEGORY',\n    category\n});","import * as app from 'firebase/app';\nimport 'firebase/firestore';\n\nconst dbConfig = {\n    apiKey: \"AIzaSyAbWEE-X5hskw_9wvYfoixZoKnPRl9xQBw\",\n    authDomain: \"smartypantz-c6131.firebaseapp.com\",\n    databaseURL: \"https://smartypantz-c6131.firebaseio.com\",\n    projectId: \"smartypantz-c6131\",\n    storageBucket: \"smartypantz-c6131.appspot.com\",\n    messagingSenderId: \"888130110269\",\n    appId: \"1:888130110269:web:dcae88f6c62d5e22867b54\",\n    measurementId: \"G-R2GE08FY8L\"\n};\n\napp.initializeApp(dbConfig);\nconst db = app.firestore();\n\nexport {db};"],"sourceRoot":""}